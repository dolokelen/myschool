# Generated by Django 4.2.7 on 2023-11-29 05:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import school.utility
import school.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_alter_user_is_active'),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('dimension', models.CharField(max_length=200)),
                ('office_counts', models.PositiveSmallIntegerField()),
                ('toilet_counts', models.PositiveSmallIntegerField()),
                ('classroom_counts', models.PositiveSmallIntegerField()),
                ('date_constructed', models.DateField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('dimension', models.CharField(max_length=150)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='classrooms', to='school.building')),
            ],
        ),
        migrations.CreateModel(
            name='ClassTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(max_length=7)),
                ('end_time', models.CharField(max_length=7)),
                ('week_days', models.CharField(max_length=6)),
            ],
            options={
                'unique_together': {('start_time', 'end_time', 'week_days')},
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('Freshman', 'Freshman'), ('Sophomore', 'Sophomore'), ('Junior', 'Junior'), ('Senior', 'Senior'), ('Graduate', 'Graduate')], max_length=9)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=200, unique=True)),
                ('price_per_credit', models.DecimalField(decimal_places=2, max_digits=5)),
                ('credit', models.PositiveSmallIntegerField()),
                ('additional_fee', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('budget', models.DecimalField(decimal_places=2, max_digits=8)),
                ('duty', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('birth_date', models.DateField()),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('religion', models.CharField(choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('None', 'None')], max_length=9)),
                ('phone', models.CharField(max_length=15)),
                ('image', models.ImageField(upload_to=school.utility.image_upload_path, validators=[school.validators.validate_file_size])),
                ('joined_at', models.DateField(auto_now_add=True)),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=7)),
                ('employment_status', models.CharField(choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time')], max_length=9)),
                ('level_of_education', models.CharField(choices=[('High Sch Diploma', 'High Sch Diploma'), ('Trade Sch Certificate', 'Trade Sch Certificate'), ('Bachelor Degree', 'Bachelor Degree'), ('Master Degree', 'Master Degree'), ('Doctorate Degree', 'Doctorate Degree')], max_length=21)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=6)),
                ('term_of_reference', models.FileField(upload_to='school/TOR', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='school.department')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='majors', to='school.department')),
            ],
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dimension', models.CharField(max_length=100)),
                ('building', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='offices', to='school.building')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(unique=True, validators=[school.validators.validate_school_year])),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sections', to='school.classroom')),
                ('classtime', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sections', to='school.classtime')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sections', to='school.course')),
            ],
            options={
                'unique_together': {('classroom', 'classtime'), ('name', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('I', 'I'), ('II', 'II'), ('III', 'III')], max_length=3)),
                ('enrollment_start_date', models.DateField()),
                ('enrollment_end_date', models.DateField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_current', models.BooleanField(default=False)),
                ('courses', models.ManyToManyField(related_name='semesters', to='school.course')),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='semesters', to='school.schoolyear')),
            ],
            options={
                'unique_together': {('name', 'school_year')},
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('level', models.CharField(choices=[('Freshman', 'Freshman'), ('Sophomore', 'Sophomore'), ('Junior', 'Junior'), ('Senior', 'Senior'), ('Graduate', 'Graduate')], max_length=9)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('birth_date', models.DateField()),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('religion', models.CharField(choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('None', 'None')], max_length=9)),
                ('phone', models.CharField(max_length=15)),
                ('image', models.ImageField(upload_to=school.utility.image_upload_path, validators=[school.validators.validate_file_size])),
                ('joined_at', models.DateField(auto_now_add=True)),
                ('student_number', models.CharField(default=school.utility.student_number_generator, max_length=255)),
                ('registration_fee', models.DecimalField(decimal_places=2, max_digits=6)),
                ('is_transfer', models.BooleanField(default=False)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='students', to='school.department')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='students', to='school.major')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('birth_date', models.DateField()),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('religion', models.CharField(choices=[('Christian', 'Christian'), ('Muslim', 'Muslim'), ('None', 'None')], max_length=9)),
                ('phone', models.CharField(max_length=15)),
                ('image', models.ImageField(upload_to=school.utility.image_upload_path, validators=[school.validators.validate_file_size])),
                ('joined_at', models.DateField(auto_now_add=True)),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=7)),
                ('employment_status', models.CharField(choices=[('Full Time', 'Full Time'), ('Part Time', 'Part Time')], max_length=9)),
                ('level_of_education', models.CharField(choices=[('High Sch Diploma', 'High Sch Diploma'), ('Trade Sch Certificate', 'Trade Sch Certificate'), ('Bachelor Degree', 'Bachelor Degree'), ('Master Degree', 'Master Degree'), ('Doctorate Degree', 'Doctorate Degree')], max_length=21)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=6)),
                ('term_of_reference', models.FileField(upload_to=school.utility.tor_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teachers', to='school.department')),
                ('office', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teachers', to='school.office')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervisees', to='school.teacher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BuildingAddress',
            fields=[
                ('country', models.CharField(max_length=50)),
                ('county', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('community', models.CharField(max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('building', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='buildingaddress', serialize=False, to='school.building')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DepartmentAddress',
            fields=[
                ('country', models.CharField(max_length=50)),
                ('county', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('community', models.CharField(max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='departmentaddress', serialize=False, to='school.department')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeAddress',
            fields=[
                ('country', models.CharField(max_length=50)),
                ('county', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('community', models.CharField(max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='employeeaddress', serialize=False, to='school.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentAddress',
            fields=[
                ('country', models.CharField(max_length=50)),
                ('county', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('community', models.CharField(max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='studentaddress', serialize=False, to='school.student')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherAddress',
            fields=[
                ('country', models.CharField(max_length=50)),
                ('county', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('community', models.CharField(max_length=200)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('teacher', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='teacheraddress', serialize=False, to='school.teacher')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='student',
            name='supervisor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mentees', to='school.teacher'),
        ),
        migrations.AddField(
            model_name='employee',
            name='office',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='school.office'),
        ),
        migrations.AddField(
            model_name='employee',
            name='supervisor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervisees', to='school.employee'),
        ),
        migrations.CreateModel(
            name='DepartmentContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departmentcontact', to='school.department')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='course',
            name='departments',
            field=models.ManyToManyField(related_name='courses', to='school.department'),
        ),
        migrations.AddField(
            model_name='course',
            name='prerequisite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prerequisites', to='school.course'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(choices=[('P', 'P'), ('A', 'A'), ('E', 'E'), ('T', 'T')], max_length=1)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendances', to='school.course')),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.schoolyear')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendances', to='school.section')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendances', to='school.student')),
            ],
        ),
        migrations.CreateModel(
            name='Teach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teaches', to='school.course')),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teaches', to='school.schoolyear')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teaches', to='school.section')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teaches', to='school.semester')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teaches', to='school.teacher')),
            ],
            options={
                'unique_together': {('teacher', 'course', 'section', 'semester', 'school_year')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('quiz', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('assignment', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('midterm', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(25)])),
                ('project', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(15)])),
                ('final', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(35)])),
                ('graded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grades', to='school.course')),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grades', to='school.schoolyear')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grades', to='school.section')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grades', to='school.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grades', to='school.student')),
            ],
            options={
                'unique_together': {('student', 'school_year', 'semester', 'course', 'section')},
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Cancelled', 'Cancelled')], default='Pending', max_length=9)),
                ('has_scholarship', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enrollments', to='school.course')),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enrollments', to='school.schoolyear')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enrollments', to='school.section')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enrollments', to='school.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='enrollments', to='school.student')),
            ],
            options={
                'unique_together': {('student', 'course', 'section', 'semester', 'school_year')},
            },
        ),
    ]
